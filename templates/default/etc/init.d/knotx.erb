#!/bin/sh

#
# chkconfig: - 80 20
# processname: <%= @knotx_id %>
# description: Knotx - reactive microservice assembler
#

### BEGIN INIT INFO
# Provides: <%= @knotx_id %>
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Short-Description: start and stop <%= @knotx_id %>
### END INIT INFO

. /etc/rc.d/init.d/functions

ROOT_DIR="<%= @knotx_root_dir %>"

CONFIG_FILE="<%= @knotx_root_dir %>/knotx.conf"

[ -e $CONFIG_FILE ] && . $CONFIG_FILE

# Removing endlines from variable for loading
KNOTX_OPTS=$(echo $KNOTX_OPTS|tr -d '\n')
KNOTX_CONFIG=$(echo $KNOTX_CONFIG|tr -d '\n')

start()
{
  echo -n $"Starting <%= @knotx_id %>: "
  runuser -l "<%= @knotx_user %>" -c "java $KNOTX_OPTS -cp $ROOT_DIR/app/\* io.knotx.launcher.LogbackLauncher $KNOTX_CONFIG $KNOTX_CONFIG_EXTRA >> <%= @knotx_log_dir %>/<%= @knotx_id %>.log 2>&1 &" && echo_success || echo_failure
  RETVAL=$?
  echo
  if [ $RETVAL -ne 0 ] ; then
    echo "Error while starting <%= @knotx_id %>. Error code from java: [$RETVAL]"
  fi
}

get_pid()
{
  ps -aefw | grep "cp $ROOT_DIR/" | grep -v " grep " | awk '{print $2}'
}

do_start()
{
  PID=`get_pid`
  if [ ! -z $PID ] ; then
    echo "<%= @knotx_id %> is already running"
    RETVAL=0
  else
    start
  fi
}

do_stop()
{
  PID=`get_pid`
  if [ ! -z $PID ] ; then
    echo -n $"Stopping <%= @knotx_id %>: "
    kill -9 $PID > /dev/null 2>&1 && echo_success || echo_failure
    RETVAL=$?
    echo
    if [ $RETVAL -ne 0 ] ; then
      echo "<%= @knotx_id %> failed to stop"
    fi
  else
    echo "<%= @knotx_id %> is already stopped"
  fi
}

do_status()
{
  PID=`get_pid`
  if [ ! -z $PID ] ; then
    echo "<%= @knotx_id %> is running"
    RETVAL=0
  else
    echo "<%= @knotx_id %> is stopped"
    RETVAL=3
  fi
}

case "$1" in
start)
  do_start
;;
stop)
  do_stop
;;
restart)
  do_stop
  do_start
;;
status)
  do_status
;;
*)
echo "Usage: $0 {start|stop|restart}"
RETVAL=1
esac

exit $RETVAL
